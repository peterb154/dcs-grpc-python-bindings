# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from dcs.net.v0 import net_pb2 as dcs_dot_net_dot_v0_dot_net__pb2


class NetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendChatTo = channel.unary_unary(
                '/dcs.net.v0.NetService/SendChatTo',
                request_serializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatToRequest.SerializeToString,
                response_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatToResponse.FromString,
                )
        self.SendChat = channel.unary_unary(
                '/dcs.net.v0.NetService/SendChat',
                request_serializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatRequest.SerializeToString,
                response_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatResponse.FromString,
                )
        self.GetPlayers = channel.unary_unary(
                '/dcs.net.v0.NetService/GetPlayers',
                request_serializer=dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersRequest.SerializeToString,
                response_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersResponse.FromString,
                )
        self.KickPlayer = channel.unary_unary(
                '/dcs.net.v0.NetService/KickPlayer',
                request_serializer=dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerRequest.SerializeToString,
                response_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerResponse.FromString,
                )
        self.ForcePlayerSlot = channel.unary_unary(
                '/dcs.net.v0.NetService/ForcePlayerSlot',
                request_serializer=dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotRequest.SerializeToString,
                response_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotResponse.FromString,
                )


class NetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendChatTo(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_send_chat_to
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendChat(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_send_chat
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayers(self, request, context):
        """returns a list of all connected players.
        https://wiki.hoggitworld.com/view/DCS_func_get_player_info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KickPlayer(self, request, context):
        """Kick a specified player from the server with a message
        https://wiki.hoggitworld.com/view/DCS_func_kick
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForcePlayerSlot(self, request, context):
        """Force a player into a slot / coalition.
        To move the player back into spectators, use the following pseudo:
        `ForcePlayerSlot({ player_id: ..., coalition: NEUTRAL, slot_id: "" })`
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendChatTo': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChatTo,
                    request_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatToRequest.FromString,
                    response_serializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatToResponse.SerializeToString,
            ),
            'SendChat': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChat,
                    request_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatRequest.FromString,
                    response_serializer=dcs_dot_net_dot_v0_dot_net__pb2.SendChatResponse.SerializeToString,
            ),
            'GetPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayers,
                    request_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersRequest.FromString,
                    response_serializer=dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersResponse.SerializeToString,
            ),
            'KickPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.KickPlayer,
                    request_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerRequest.FromString,
                    response_serializer=dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerResponse.SerializeToString,
            ),
            'ForcePlayerSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.ForcePlayerSlot,
                    request_deserializer=dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotRequest.FromString,
                    response_serializer=dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dcs.net.v0.NetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendChatTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.net.v0.NetService/SendChatTo',
            dcs_dot_net_dot_v0_dot_net__pb2.SendChatToRequest.SerializeToString,
            dcs_dot_net_dot_v0_dot_net__pb2.SendChatToResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.net.v0.NetService/SendChat',
            dcs_dot_net_dot_v0_dot_net__pb2.SendChatRequest.SerializeToString,
            dcs_dot_net_dot_v0_dot_net__pb2.SendChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.net.v0.NetService/GetPlayers',
            dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersRequest.SerializeToString,
            dcs_dot_net_dot_v0_dot_net__pb2.GetPlayersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KickPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.net.v0.NetService/KickPlayer',
            dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerRequest.SerializeToString,
            dcs_dot_net_dot_v0_dot_net__pb2.KickPlayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForcePlayerSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.net.v0.NetService/ForcePlayerSlot',
            dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotRequest.SerializeToString,
            dcs_dot_net_dot_v0_dot_net__pb2.ForcePlayerSlotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
