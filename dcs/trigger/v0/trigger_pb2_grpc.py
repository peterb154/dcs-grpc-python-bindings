# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from dcs.trigger.v0 import trigger_pb2 as dcs_dot_trigger_dot_v0_dot_trigger__pb2


class TriggerServiceStub(object):
    """https://wiki.hoggitworld.com/view/DCS_singleton_trigger
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OutText = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/OutText',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextResponse.FromString,
                )
        self.OutTextForCoalition = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/OutTextForCoalition',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionResponse.FromString,
                )
        self.OutTextForGroup = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/OutTextForGroup',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupResponse.FromString,
                )
        self.OutTextForUnit = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/OutTextForUnit',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitResponse.FromString,
                )
        self.GetUserFlag = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/GetUserFlag',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagResponse.FromString,
                )
        self.SetUserFlag = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/SetUserFlag',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagResponse.FromString,
                )
        self.MarkToAll = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/MarkToAll',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllResponse.FromString,
                )
        self.MarkToCoalition = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/MarkToCoalition',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionResponse.FromString,
                )
        self.MarkToGroup = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/MarkToGroup',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupResponse.FromString,
                )
        self.MarkupToAll = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/MarkupToAll',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllResponse.FromString,
                )
        self.MarkupToCoalition = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/MarkupToCoalition',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionResponse.FromString,
                )
        self.RemoveMark = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/RemoveMark',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkResponse.FromString,
                )
        self.Explosion = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/Explosion',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionResponse.FromString,
                )
        self.Smoke = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/Smoke',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeResponse.FromString,
                )
        self.IlluminationBomb = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/IlluminationBomb',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombResponse.FromString,
                )
        self.SignalFlare = channel.unary_unary(
                '/dcs.trigger.v0.TriggerService/SignalFlare',
                request_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareRequest.SerializeToString,
                response_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareResponse.FromString,
                )


class TriggerServiceServicer(object):
    """https://wiki.hoggitworld.com/view/DCS_singleton_trigger
    """

    def OutText(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_outText
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OutTextForCoalition(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_outTextForCoalition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OutTextForGroup(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_outTextForGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OutTextForUnit(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_outTextForUnit
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserFlag(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_getUserFlag
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserFlag(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_setUserFlag
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkToAll(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_markToAll
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkToCoalition(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_markToCoalition
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkToGroup(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_markToGroup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkupToAll(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_markupToAll
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkupToCoalition(self, request, context):
        """Uses markupToAll under the hood but enforces a coalition to be specified
        https://wiki.hoggitworld.com/view/DCS_func_markupToAll
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMark(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_removeMark
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Explosion(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_explosion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Smoke(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_smoke
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IlluminationBomb(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_illuminationBomb
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignalFlare(self, request, context):
        """https://wiki.hoggitworld.com/view/DCS_func_signalFlare
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TriggerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OutText': grpc.unary_unary_rpc_method_handler(
                    servicer.OutText,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextResponse.SerializeToString,
            ),
            'OutTextForCoalition': grpc.unary_unary_rpc_method_handler(
                    servicer.OutTextForCoalition,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionResponse.SerializeToString,
            ),
            'OutTextForGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.OutTextForGroup,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupResponse.SerializeToString,
            ),
            'OutTextForUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.OutTextForUnit,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitResponse.SerializeToString,
            ),
            'GetUserFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFlag,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagResponse.SerializeToString,
            ),
            'SetUserFlag': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserFlag,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagResponse.SerializeToString,
            ),
            'MarkToAll': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkToAll,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllResponse.SerializeToString,
            ),
            'MarkToCoalition': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkToCoalition,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionResponse.SerializeToString,
            ),
            'MarkToGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkToGroup,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupResponse.SerializeToString,
            ),
            'MarkupToAll': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkupToAll,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllResponse.SerializeToString,
            ),
            'MarkupToCoalition': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkupToCoalition,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionResponse.SerializeToString,
            ),
            'RemoveMark': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMark,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkResponse.SerializeToString,
            ),
            'Explosion': grpc.unary_unary_rpc_method_handler(
                    servicer.Explosion,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionResponse.SerializeToString,
            ),
            'Smoke': grpc.unary_unary_rpc_method_handler(
                    servicer.Smoke,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeResponse.SerializeToString,
            ),
            'IlluminationBomb': grpc.unary_unary_rpc_method_handler(
                    servicer.IlluminationBomb,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombResponse.SerializeToString,
            ),
            'SignalFlare': grpc.unary_unary_rpc_method_handler(
                    servicer.SignalFlare,
                    request_deserializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareRequest.FromString,
                    response_serializer=dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dcs.trigger.v0.TriggerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TriggerService(object):
    """https://wiki.hoggitworld.com/view/DCS_singleton_trigger
    """

    @staticmethod
    def OutText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/OutText',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OutTextForCoalition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/OutTextForCoalition',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForCoalitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OutTextForGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/OutTextForGroup',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OutTextForUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/OutTextForUnit',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.OutTextForUnitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/GetUserFlag',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.GetUserFlagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserFlag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/SetUserFlag',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SetUserFlagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkToAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/MarkToAll',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkToCoalition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/MarkToCoalition',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToCoalitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkToGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/MarkToGroup',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkToGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkupToAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/MarkupToAll',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToAllResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkupToCoalition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/MarkupToCoalition',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.MarkupToCoalitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveMark(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/RemoveMark',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.RemoveMarkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Explosion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/Explosion',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.ExplosionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Smoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/Smoke',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SmokeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IlluminationBomb(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/IlluminationBomb',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.IlluminationBombResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignalFlare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dcs.trigger.v0.TriggerService/SignalFlare',
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareRequest.SerializeToString,
            dcs_dot_trigger_dot_v0_dot_trigger__pb2.SignalFlareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
